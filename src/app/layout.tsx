import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}

import { useEffect, useState } from 'react';
import { supabase } from '@/lib/supabase';

export function setqueue() {
    const [queueCount, setQueueCount] = useState<number>(0);

    useEffect(() => {
        const fetchQueueCount = async () => {
            const { count, error } = await supabase
                .from('queues')
                .select('*', { count: 'exact' });

            if (error) {
                console.error('Error fetching queue count:', error);
            } else {
                setQueueCount(count ?? 0);
            }
        };

        fetchQueueCount();

        // Real-time update for queue count
        const subscription = supabase
            .channel('queues')
            .on('postgres_changes', { event: '*', schema: 'public', table: 'queues' }, fetchQueueCount)
            .subscribe();

        return () => {
            supabase.removeChannel(subscription);
        };
    }, []);

    return (
        <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
            <h1 className="text-3xl font-bold">Current Queues: {queueCount}</h1>
        </div>
    );
}